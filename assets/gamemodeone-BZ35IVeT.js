import"./main-D45ISpvz.js";import{m as $}from"./maplibre-gl-DtRcNtl7.js";class I{constructor(){this.container=null,this.overlay=null,this.currentNotification=null,this.init()}init(){this.overlay=document.createElement("div"),this.overlay.className="notification-overlay",document.body.appendChild(this.overlay),this.container=document.createElement("div"),this.container.className="notification-container",document.body.appendChild(this.container)}show(t){this.currentNotification&&this.hide();const{type:s="success",title:a="",message:o="",stats:n=null,duration:d=null,onClose:g=null}=t,f=document.createElement("div");f.className=`notification ${s}`;let m=`
            <div class="notification-icon">${{success:"üéâ",warning:"‚è∞",error:"‚ùå"}[s]}</div>
            <div class="notification-title">${a}</div>
            <div class="notification-message">${o}</div>
        `;n&&(m+='<div class="notification-stats">',n.forEach(N=>{m+=`
                    <div class="stat-item">
                        <span class="stat-value">${N.value}</span>
                        <span class="stat-label">${N.label}</span>
                    </div>
                `}),m+="</div>"),m+='<button class="notification-button" onclick="gameNotification.hide()">Continue</button>',f.innerHTML=m,this.container.appendChild(f),this.currentNotification=f,this.overlay.classList.add("show"),f.classList.add("show"),d&&setTimeout(()=>this.hide(),d),this.onCloseCallback=g}hide(){this.currentNotification&&(this.overlay.classList.remove("show"),this.overlay.classList.add("hide"),this.currentNotification.classList.remove("show"),this.currentNotification.classList.add("hide"),setTimeout(()=>{this.currentNotification&&(this.container.removeChild(this.currentNotification),this.currentNotification=null),this.overlay.classList.remove("hide"),this.onCloseCallback&&(this.onCloseCallback(),this.onCloseCallback=null)},400))}formatTime(t){const s=Math.floor(t/60),a=t%60;return`${s.toString().padStart(2,"0")}:${a.toString().padStart(2,"0")}`}}window.gameNotification=new I;function k(){switch(M.Timer){case"30 seconds":r=30;break;case"1 minute":r=60;break;case"2 minutes":r=120;break;case"3 minutes":r=180;break;case"4 minutes":r=240;break;case"5 minutes":r=300;break;default:r=120}return r}const w=document.querySelector(".heading"),L=document.querySelector(".top-info-bar .counter"),E=document.querySelector(".top-info-bar .timer"),p=document.getElementById("startButton"),y=document.getElementById("endButton");let F;const M=JSON.parse(localStorage.getItem("gameSettings"));var e=new $.Map({container:"map",style:"https://basemaps.cartocdn.com/gl/dark-matter-gl-style/style.json",center:[80,30],zoom:1,maxZoom:5,attributionControl:!1,renderWorldCopies:!1});let h=[],i=null,u=0,r,b=new Set,v=!1,c=null;p.disabled=!0;y.disabled=!0;k();fetch("/democracy-game/assets/data/wm2.geojson").then(l=>l.json()).then(l=>{const t={};l.features.forEach(s=>{if(s.properties){for(const a in s.properties)if(a.startsWith("Political_")){const o=s.properties[a].trim();o!==null&&o!=="N/A"&&(t[a]||(t[a]={}),t[a][o]||(t[a][o]=0),t[a][o]++)}}});for(const s in t)for(const a in t[s])t[s][a]>0&&h.push({propertyKey:s,systemValue:a,count:t[s][a]});h.length>0&&(p.disabled=!1),e.on("load",()=>{const s=e.getStyle();s&&s.layers&&s.layers.filter(n=>n.type==="symbol").map(n=>n.id).forEach(n=>{e.getLayer(n)&&e.removeLayer(n)}),e.setPaintProperty("water","fill-color","#342F33"),e.addSource("countries",{type:"geojson",data:l,promoteId:"ADMIN"}),e.addLayer({id:"countries-layer",type:"fill",source:"countries",paint:{"fill-color":["case",["boolean",["feature-state","incorrect_click"],!1],"#FF3860",["boolean",["feature-state","clicked"],!1],"#47E18D","#FFEEE2"],"fill-opacity":["case",["boolean",["feature-state","incorrect_click"],!1],.9,["boolean",["feature-state","clicked"],!1],.8,["boolean",["feature-state","hover"],!1],1,.9],"fill-outline-color":"#342F33"}}),e.addLayer({id:"countries-lines",type:"line",source:"countries",layout:{},paint:{"line-color":"#342F33","line-width":["case",["boolean",["feature-state","clicked"],!1],1,["boolean",["feature-state","hover"],!1],1.5,.5]}}),l.features.forEach(o=>{o.properties&&o.properties.ADMIN&&e.setFeatureState({source:"countries",id:o.properties.ADMIN},{hover:!1,clicked:!1,incorrect_click:!1})});const a=new $.Popup({className:"custom-country-popup",closeButton:!1,closeOnClick:!1});e.on("mousemove","countries-layer",o=>{if(o.features.length>0){const n=o.features[0].id;e.getCanvas().style.cursor="pointer",c!==null&&c!==n&&e.setFeatureState({source:"countries",id:c},{hover:!1}),e.setFeatureState({source:"countries",id:n},{hover:!0}),c=n;const d=o.features[0].properties.ADMIN;a.setLngLat(o.lngLat).setHTML(d).addTo(e)}else e.getCanvas().style.cursor="",c!==null&&(e.setFeatureState({source:"countries",id:c},{hover:!1}),c=null),a.remove()}),e.on("mouseleave","countries-layer",()=>{e.getCanvas().style.cursor="",c!==null&&(e.setFeatureState({source:"countries",id:c},{hover:!1}),c=null),a.remove()}),e.on("click","countries-layer",o=>{if(v&&o.features.length>0){const n=o.features[0],d=n.properties.ADMIN;if(b.has(d))return;if(n.properties[i.propertyKey]===i.systemValue)u++,b.add(d),e.setFeatureState({source:"countries",id:d},{clicked:!0,hover:!1}),c===d&&(c=null),T(),u===i.count&&S(!0);else{const g=d;e.setFeatureState({source:"countries",id:g},{incorrect_click:!0})}}})})}).catch(l=>console.error("failed to load geojson",l));function C(){const l=Math.floor(r/60),t=r%60;E.textContent=`${l.toString().padStart(2,"0")}:${t.toString().padStart(2,"0")}`}function T(){L.textContent=`${u.toString().padStart(2,"0")}/${i.count.toString().padStart(2,"0")}`}function D(){if(k(),h.length===0){gameNotification.show({type:"error",title:"No Challenges",message:"No game challenges available to start the game."});return}v=!0,p.disabled=!0,y.disabled=!1,e.getSource("countries")&&e.removeFeatureState({source:"countries"}),b.clear(),c=null;const l=Math.floor(Math.random()*h.length);i=h[l],u=0,w.textContent=`${i.systemValue.toUpperCase()}`,T(),C(),F=setInterval(()=>{r--,C(),r<=0&&S(!1)},1e3)}function S(l=!1){if(clearInterval(F),v=!1,p.disabled=!1,y.disabled=!0,l)gameNotification.show({type:"success",title:"Perfect Score!",message:`Congratulations! You found all ${i.count} ${i.systemValue.toLowerCase()} countries!`,stats:[{value:`${u}/${i.count}`,label:"Found"},{value:"100%",label:"Score"},{value:gameNotification.formatTime(r),label:"Time Left"}]});else if(r<=0){const t=Math.round(u/i.count*100);gameNotification.show({type:"error",title:"Time's Up!",message:`You found ${u} out of ${i.count} ${i.systemValue.toLowerCase()} countries`,stats:[{value:`${u}/${i.count}`,label:"Found"},{value:`${t}%`,label:"Final Score"},{value:"00:00",label:"Time Left"}]})}else{const t=Math.round(u/i.count*100);gameNotification.show({type:"warning",title:"Game Ended",message:`You found ${u} out of ${i.count} ${i.systemValue.toLowerCase()} countries`,stats:[{value:`${u}/${i.count}`,label:"Found"},{value:`${t}%`,label:"Score"},{value:gameNotification.formatTime(r),label:"Time Left"}]})}setTimeout(()=>{w.textContent="SYSTEM TYPE",L.textContent="00/00",E.textContent="00:00"},100)}p.addEventListener("click",D);y.addEventListener("click",()=>{v&&S(!1)});window.addEventListener("resize",function(){e&&e.resize()});C();
