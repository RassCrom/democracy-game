import{H as c}from"./main-CHgTCQ_b.js";document.title="ðŸ’• Drag the Country";const d=localStorage.getItem("gameSettings"),a=JSON.parse(d);let i=a.Continent;console.log(a.Continent);class l{constructor(){this.timerInterval=null,this.seconds=0,this.attempts=10,this.assignments={},this.draggedCountry=null,this.gameActive=!0,this.incorrectCountries=new Set,this.guessedCountries=new Set,this.regimeTypes=["Democracy","Authoritarian","Monarchy","Totalitarian"],this.guessedCounters={},this.countries=[],this.correctAnswers={},this.elements={timer:document.getElementById("timer"),attemptsCounter:document.getElementById("attempts-counter"),countriesContainer:document.getElementById("countries"),checkBtn:document.getElementById("check-btn"),restartBtn:document.getElementById("restart-btn"),helpBtn:document.getElementById("help-btn"),tutorialModal:document.getElementById("tutorial-modal"),closeTutorial:document.getElementById("close-tutorial"),startGame:document.getElementById("start-game"),statusMessage:document.getElementById("status-message"),statusTitle:document.getElementById("status-title"),statusText:document.getElementById("status-text")},this.initializeCounters(),this.bindEvents(),this.loadCountries(),this.startTimer()}initializeCounters(){this.regimeTypes.forEach(e=>{this.guessedCounters[e]=0})}bindEvents(){this.elements.checkBtn.addEventListener("click",()=>this.checkAnswers()),this.elements.restartBtn.addEventListener("click",()=>this.restartGame()),this.elements.helpBtn.addEventListener("click",()=>this.showTutorial()),this.elements.closeTutorial.addEventListener("click",()=>this.hideTutorial()),this.elements.startGame.addEventListener("click",()=>this.hideTutorial()),this.elements.tutorialModal.addEventListener("click",e=>{e.target===this.elements.tutorialModal&&this.hideTutorial()})}startTimer(){this.resetTimer(),this.timerInterval=setInterval(()=>{this.seconds++;const e=String(Math.floor(this.seconds/60)).padStart(2,"0"),t=String(this.seconds%60).padStart(2,"0");this.elements.timer.textContent=`${e}:${t}`},1e3)}resetTimer(){this.timerInterval&&clearInterval(this.timerInterval),this.seconds=0,this.elements.timer.textContent="00:00"}async loadCountries(){try{let s=(await(await fetch("/democracy-game/assets/countries_politicalsystem/countries_simple.json")).json()).filter(r=>r.regime&&r.regime!=="N/A"&&r.regime!=="Hybrid");this.countries=this.filterByContinent(s),this.generateCorrectAnswers(),this.renderCountries(),this.setupDragAndDrop(),this.updateRegimeCounters()}catch(e){console.error("Error loading countries:",e),this.showStatus("Error loading game data. Please refresh the page.","failure")}}filterByContinent(e){return i==="all"?e:e.filter(t=>t.continent&&t.continent.toLowerCase()===i.toLowerCase())}generateCorrectAnswers(){this.correctAnswers={},this.countries.forEach(e=>{this.correctAnswers[e.name]=e.regime})}renderCountries(){this.elements.countriesContainer.innerHTML="",this.countries.forEach(e=>{const t=this.createCountryCard(e);this.elements.countriesContainer.appendChild(t)})}createCountryCard(e){const t=document.createElement("div");t.className="country-card";const s=document.createElement("img");s.className="country-shape__svgs",s.draggable=!0,s.alt=e.name,s.dataset.country=e.name,s.src=`/democracy-game/assets/images/generated_svgs/${e.iso_a2?e.iso_a2.toLowerCase()+"-shape.svg":"placeholder.svg"}`,s.onerror=function(){this.src="/democracy-game/assets/images/placeholder.svg"};const r=document.createElement("div");return r.className="country-label",r.textContent=e.name,t.appendChild(s),t.appendChild(r),t}setupDragAndDrop(){this.setupCountryDragEvents(),this.setupGovernmentDropZones(),this.setupCountriesDropZone()}setupCountryDragEvents(){document.addEventListener("dragstart",e=>{if(!this.gameActive){e.preventDefault();return}const t=e.target.closest(".country-card");t&&e.target.classList.contains("country-shape__svgs")?this.draggedCountry=t:e.preventDefault()})}setupGovernmentDropZones(){document.querySelectorAll(".government-block").forEach(t=>{t.addEventListener("dragover",s=>{this.gameActive&&(s.preventDefault(),t.classList.add("drag-over"))}),t.addEventListener("dragleave",()=>{t.classList.remove("drag-over")}),t.addEventListener("drop",s=>{if(this.gameActive&&(s.preventDefault(),t.classList.remove("drag-over"),this.draggedCountry)){(t.querySelector(".government-content")||t).appendChild(this.draggedCountry);const o=this.draggedCountry.querySelector(".country-shape__svgs").dataset.country;this.assignments[o]=t.dataset.gov,this.draggedCountry=null}})})}setupCountriesDropZone(){this.elements.countriesContainer.addEventListener("dragover",e=>{this.gameActive&&(e.preventDefault(),this.elements.countriesContainer.classList.add("drag-over"))}),this.elements.countriesContainer.addEventListener("dragleave",()=>{this.elements.countriesContainer.classList.remove("drag-over")}),this.elements.countriesContainer.addEventListener("drop",e=>{if(this.gameActive&&(e.preventDefault(),this.elements.countriesContainer.classList.remove("drag-over"),this.draggedCountry)){this.elements.countriesContainer.appendChild(this.draggedCountry);const t=this.draggedCountry.querySelector(".country-shape__svgs").dataset.country;delete this.assignments[t],this.draggedCountry=null}})}checkAnswers(){if(!this.gameActive)return;const e=this.evaluateAnswers();this.visualizeResults(e),this.updateGameState(e)}evaluateAnswers(){const e={correct:[],incorrect:[],unassigned:[],allCorrect:!0};return this.regimeTypes.forEach(t=>{this.guessedCounters[t]=0}),Object.keys(this.correctAnswers).forEach(t=>{const s=this.assignments[t],r=this.correctAnswers[t];s?s===r?(e.correct.push(t),this.guessedCounters[r]!==void 0&&this.guessedCounters[r]++):(e.incorrect.push(t),e.allCorrect=!1):(e.unassigned.push(t),e.allCorrect=!1)}),e}visualizeResults(e){document.querySelectorAll(".country-shape__svgs").forEach(t=>{t.classList.remove("correct","incorrect","unassigned"),t.style.border=""}),e.correct.forEach(t=>{const s=document.querySelector(`[data-country="${t}"]`);s&&(s.classList.add("correct"),s.style.border="3px solid #FF3860")}),e.incorrect.forEach(t=>{const s=document.querySelector(`[data-country="${t}"]`);s&&(s.classList.add("incorrect"),s.style.border="3px solid #47E18D")}),e.unassigned.forEach(t=>{const s=document.querySelector(`[data-country="${t}"]`);s&&(s.classList.add("unassigned"),s.style.border="3px solid #E39B6B")}),console.log("Check results:",{correct:e.correct.length,incorrect:e.incorrect.length,unassigned:e.unassigned.length,total:Object.keys(this.correctAnswers).length})}updateGameState(e){if((e.incorrect.length>0||e.unassigned.length>0)&&this.attempts>0&&this.attempts--,this.updateUI(),e.allCorrect)this.endGame(!0);else if(this.attempts===0)this.endGame(!1);else{const t=e.unassigned.length;this.showStatus(`${e.correct.length} correct, ${t} remaining. ${this.attempts} attempts left.`,"info")}}updateUI(){this.elements.attemptsCounter.textContent=`Attempts: ${this.attempts}`,this.updateRegimeCounters()}updateRegimeCounters(){this.regimeTypes.forEach(e=>{const t=document.getElementById(`guessed-${e}`);t&&(t.textContent=this.guessedCounters[e])})}endGame(e){this.gameActive=!1,this.resetTimer(),this.elements.checkBtn.disabled=!0,e?this.showStatus("ðŸŽ‰ Congratulations! All countries correctly placed!","success"):this.showStatus("ðŸ˜ž Game Over! No attempts remaining. Try again!","failure")}restartGame(){this.attempts=10,this.assignments={},this.gameActive=!0,this.incorrectCountries.clear(),this.guessedCountries.clear(),this.regimeTypes.forEach(e=>{this.guessedCountries[e]=0}),this.loadCountries(),this.elements.checkBtn.disabled=!1,this.updateUI(),this.hideStatus(),this.startTimer()}showTutorial(){this.elements.tutorialModal.classList.add("show")}hideTutorial(){this.elements.tutorialModal.classList.remove("show")}showStatus(e,t){this.elements.statusTitle.textContent=t==="success"?"ðŸŽ‰ Success!":"ðŸ˜ž Game Over!",this.elements.statusText.textContent=e,this.elements.statusMessage.className=`status-message show ${t}`,setTimeout(()=>this.hideStatus(),2e3)}hideStatus(){this.elements.statusMessage.classList.remove("show","success","failure")}}document.addEventListener("DOMContentLoaded",()=>{const n=document.getElementById("header");if(n){const e=new c;n.replaceWith(e.render())}new l});
