import"./main-DFWhAUVy.js";import{m as n}from"./maplibre-gl-DtRcNtl7.js";document.title="üó∫Ô∏è MapLe";class r{constructor(){this.countries=[],this.currentCountry=null,this.revealedFacts=0,this.score=0,this.timeLeft=60,this.gameActive=!1,this.gameStarted=!1,this.timer=null,this.map=null,this.initializeElements(),this.setupEventListeners(),this.initializeMap(),this.loadCountryData(),this.geojsonLoaded=!1,this.highlightedCountry=null}initializeElements(){this.timerElement=document.getElementById("timer"),this.factsContainer=document.getElementById("factsContainer"),this.guessInput=document.getElementById("guessInput"),this.guessBtn=document.getElementById("guessBtn"),this.startBtn=document.getElementById("startBtn"),this.restartBtn=document.getElementById("restartBtn"),this.helpBtn=document.getElementById("helpBtn"),this.helpModal=document.getElementById("helpModal"),this.gameOverModal=document.getElementById("gameOverModal"),this.closeHelpBtn=document.getElementById("closeHelpBtn"),this.playAgainBtn=document.getElementById("playAgainBtn"),this.gameStartMessage=document.getElementById("gameStartMessage"),this.guessSection=document.getElementById("guessSection")}setupEventListeners(){this.guessBtn.addEventListener("click",()=>this.makeGuess()),this.guessInput.addEventListener("keypress",e=>{e.key==="Enter"&&this.makeGuess()}),this.startBtn.addEventListener("click",()=>this.startNewGame()),this.restartBtn.addEventListener("click",()=>this.startNewGame()),this.helpBtn.addEventListener("click",()=>this.showModal("helpModal")),this.closeHelpBtn.addEventListener("click",()=>this.hideModal("helpModal")),this.playAgainBtn.addEventListener("click",()=>{this.hideModal("gameOverModal"),this.startNewGame()})}initializeMap(){this.map=new n.Map({container:"map",style:"https://basemaps.cartocdn.com/gl/dark-matter-gl-style/style.json",center:[0,20],zoom:2,renderWorldCopies:!1})}async loadCountryData(){try{const s=await(await fetch("/democracy-game/assets/data/wm4.geojson")).json();this.countries=s.features.map(t=>({name:t.properties.NAME||t.properties.name,capital_name:t.properties.city,country_population:t.properties.POP_EST,gdp:t.properties.GDP_MD,continent:t.properties.Continent,capital_population:t.properties.population,main_language:t.properties.WORLD_LANG,POLITICAL_:t.properties.Political_,iso:t.properties.iso_a2,coordinates:t.geometry?this.getCentroid(t.geometry):[0,0],geometry:t.geometry})).filter(t=>t.name&&t.capital_name&&t.country_population),this.addGeojsonToMap(s),console.log(`Loaded ${this.countries.length} countries`)}catch(e){console.error("Error loading country data:",e)}}addGeojsonToMap(e){this.map.on("load",()=>{e.features.forEach((s,t)=>{s.id=t}),this.map.addSource("countries",{type:"geojson",data:e}),this.map.addLayer({id:"countries-fill",type:"fill",source:"countries",paint:{"fill-color":["case",["boolean",["feature-state","hover"],!1],"#16213e",["boolean",["feature-state","selected"],!1],"#ff4757","#E39B6B"],"fill-opacity":.7}}),this.map.addLayer({id:"countries-border",type:"line",source:"countries",paint:{"line-color":"#ffffff","line-width":1,"line-opacity":.8}}),this.setupMapInteractions(),this.geojsonLoaded=!0})}setupMapInteractions(){let e=null;this.map.on("mousemove","countries-fill",s=>{s.features.length>0&&(e!==null&&this.map.setFeatureState({source:"countries",id:e},{hover:!1}),e=s.features[0].id,this.map.setFeatureState({source:"countries",id:e},{hover:!0})),this.map.getCanvas().style.cursor="pointer"}),this.map.on("mouseleave","countries-fill",()=>{e!==null&&this.map.setFeatureState({source:"countries",id:e},{hover:!1}),e=null,this.map.getCanvas().style.cursor=""}),this.map.on("click","countries-fill",s=>{if(!this.gameActive||!this.gameStarted)return;const t=s.features[0],i=t.properties.NAME||t.properties.name;i&&(this.guessInput.value=i,this.highlightSelectedCountry(t),this.makeGuess())})}highlightSelectedCountry(e){this.highlightedCountry!==null&&this.map.setFeatureState({source:"countries",id:this.highlightedCountry},{selected:!1}),this.highlightedCountry=e.id,this.map.setFeatureState({source:"countries",id:this.highlightedCountry},{selected:!0})}getCentroid(e){if(e.type==="Point")return e.coordinates;if(e.type==="Polygon"){const s=e.coordinates[0];let t=0,i=0;for(let a of s)t+=a[0],i+=a[1];return[t/s.length,i/s.length]}if(e.type==="MultiPolygon"){const s=e.coordinates[0][0];let t=0,i=0;for(let a of s)t+=a[0],i+=a[1];return[t/s.length,i/s.length]}return[0,0]}generateRandomFacts(e){const s=[],i=[()=>`The capital city is ${e.capital_name}`,()=>`The country is in ${e.continent}`,()=>`The population is approximately ${this.formatPopulation(e.country_population)}`,()=>`The main language spoken is ${e.main_language}`,()=>`The political system is ${e.POLITICAL_}`,()=>`The capital has a population of about ${this.formatPopulation(e.capital_population)}`,()=>`The GDP is approximately $${this.formatGDP(e.gdp)}`,()=>`The country name starts with "${e.name.charAt(0)}"`,()=>`The capital name starts with "${e.capital_name.charAt(0)}"`,()=>e.country_population>5e7?"The population is more than 50 million":"The population is less than 50 million",()=>e.capital_population>2e6?"The capital has more than 2 million residents":"The capital has less than 2 million residents"].sort(()=>.5-Math.random());for(let a=0;a<Math.min(5,i.length);a++)s.push(i[a]());return s}formatPopulation(e){return e>=1e6?(e/1e6).toFixed(1)+" million":e.toLocaleString()}formatGDP(e){return e>=1e12?(e/1e12).toFixed(1)+" trillion":e>=1e9?(e/1e9).toFixed(1)+" billion":e.toLocaleString()}startNewGame(){if(this.countries.length===0){console.error("No countries loaded");return}this.gameActive=!0,this.gameStarted=!0,this.revealedFacts=0,this.timeLeft=60,this.currentCountry=this.countries[Math.floor(Math.random()*this.countries.length)],this.currentFacts=this.generateRandomFacts(this.currentCountry),this.gameStartMessage.style.display="none",this.factsContainer.style.display="block",this.guessSection.style.display="flex",this.startBtn.style.display="none",this.restartBtn.style.display="inline-block",this.factsContainer.innerHTML="",this.guessInput.value="",this.guessInput.disabled=!1,this.guessBtn.disabled=!1,this.guessInput.classList.remove("correct-answer","wrong-answer"),this.updateTimer(),this.startTimer(),this.revealNextFact(),this.geojsonLoaded&&this.highlightedCountry!==null&&(this.map.setFeatureState({source:"countries",id:this.highlightedCountry},{selected:!1}),this.highlightedCountry=null)}revealNextFact(){if(this.revealedFacts<5){const e=document.createElement("div");e.className="fact-item",e.innerHTML=`
                <div class="fact-number">Fact ${this.revealedFacts+1}</div>
                <div class="fact-text">${this.currentFacts[this.revealedFacts]}</div>
            `,this.factsContainer.appendChild(e),setTimeout(()=>{e.classList.add("revealed")},100),this.revealedFacts++}else if(this.revealedFacts===5){console.log(this.currentCountry.iso);const e=document.createElement("div");e.className="fact-item",e.innerHTML=`
                <div class="fact-number">Final Clue - Country Shape</div>
                <div class="country-shape__clue">
                    <img src="/democracy-game/assets/images/generated_svgs/${this.currentCountry.iso.toLowerCase()}-shape.svg" alt="Country Shape" />
                </div>
            `,this.factsContainer.appendChild(e),setTimeout(()=>{e.classList.add("revealed")},100),this.revealedFacts++}}makeGuess(){if(!this.gameActive||!this.gameStarted)return;const e=this.guessInput.value.trim().toLowerCase(),s=this.currentCountry.name.toLowerCase();e===s?this.handleCorrectGuess():this.handleWrongGuess()}handleCorrectGuess(){this.gameActive=!1,this.stopTimer();const e=Math.max(10,110-this.revealedFacts*20);if(this.score+=e,this.guessInput.classList.add("correct-answer"),this.guessInput.disabled=!0,this.guessBtn.disabled=!0,this.geojsonLoaded){const s=this.map.querySourceFeatures("countries",{filter:["==",["get","NAME"],this.currentCountry.name]})[0];s&&this.highlightSelectedCountry(s)}setTimeout(()=>{this.showGameOver(!0,e)},1500)}handleWrongGuess(e){this.guessInput.classList.add("wrong-answer"),this.guessInput.value="",setTimeout(()=>{this.guessInput.classList.remove("wrong-answer")},1e3),this.revealedFacts<=6&&this.revealNextFact(),this.revealedFacts>6&&(this.gameActive=!1,this.stopTimer(),setTimeout(()=>{this.showGameOver(!1,0)},1500))}startTimer(){this.timer=setInterval(()=>{this.timeLeft--,this.updateTimer(),this.timeLeft<=0&&(this.gameActive=!1,this.stopTimer(),this.showGameOver(!1,0))},1e3)}stopTimer(){this.timer&&(clearInterval(this.timer),this.timer=null)}updateTimer(){this.timerElement.textContent=this.gameStarted?this.timeLeft:"60",this.timeLeft<=10?this.timerElement.style.color="var(--red-color)":this.timeLeft<=30?this.timerElement.style.color="var(--orange-color)":this.timerElement.style.color="var(--green-color)"}showGameOver(e,s){const t=document.getElementById("gameOverTitle"),i=document.getElementById("gameOverText"),a=document.getElementById("scoreDisplay");e?(t.textContent="üéâ Congratulations!",i.innerHTML=`
                <p>You correctly guessed <strong>${this.currentCountry.name}</strong>!</p>
                <p>You earned <strong>${s}</strong> points with ${this.revealedFacts} facts revealed.</p>
            `):(t.textContent="‚è∞ Time's Up!",i.innerHTML=`
                <p>The correct answer was <strong>${this.currentCountry.name}</strong>.</p>
                <p>Better luck next time!</p>
            `),a.innerHTML=`
            <div class="score-item">
                <span class="score-label">Total Score:</span>
                <span class="score-value">${this.score} points</span>
            </div>
            <div class="score-item">
                <span class="score-label">Facts Revealed:</span>
                <span class="score-value">${this.revealedFacts}/6</span>
            </div>
            <div class="score-item">
                <span class="score-label">Time Remaining:</span>
                <span class="score-value">${this.timeLeft} seconds</span>
            </div>
        `,this.showModal("gameOverModal")}showModal(e){document.getElementById(e).classList.add("active")}hideModal(e){document.getElementById(e).classList.remove("active")}}document.addEventListener("DOMContentLoaded",()=>{new r});
